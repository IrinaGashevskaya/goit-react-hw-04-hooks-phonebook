{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","addContact","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","className","onSubmit","preventDefault","type","pattern","title","required","onChange","ContactList","contacts","onDelete","map","contact","id","onClick","Filter","App","setContacts","filter","setFilter","useEffect","localStorage","setItem","JSON","stringify","visibleContacts","toLowerCase","includes","trim","alert","uuidv4","prevContacts","target","getAttribute","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a51c8cec.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ContactForm.css';\r\nimport { useState } from 'react';\r\nconst ContactForm = ({ addContact }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    addContact(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <label className=\"label-form\">\r\n        Name\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label className=\"label-form\">\r\n        Number\r\n        <input\r\n          className=\"input\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button className=\"button-form\" type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport './ContactList.css';\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul className=\"list\">\r\n      {contacts.map(contact => (\r\n        <li className=\"item\" key={contact.id}>\r\n          <p className=\"name\">\r\n            {contact.name}: {contact.number}\r\n          </p>\r\n          {\r\n            <button className=\"button\" data-key={contact.id} type=\"button\" name=\"delete\" onClick={onDelete}>\r\n              Delete\r\n            </button>\r\n          }\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport './Filter.css';\r\nconst Filter = ({ value, handleChange }) => {\r\n  return (\r\n    <label className=\"label\">\r\n      Find contacts by name\r\n      <input className=\"input-filter\" type=\"text\" value={value} onChange={handleChange} />\r\n    </label>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport './App.css';\nimport 'modern-normalize/modern-normalize.css';\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n  const addContactSubmit = (name, number) => {\n    if (contacts.map(contact => contact.name.toLowerCase()).includes(name.toLowerCase().trim())) {\n      alert(`${name} is already in contacts `);\n    }\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    setContacts(prevContacts => [...prevContacts, contact]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  const onDeleteContact = e => {\n    const id = e.target.getAttribute('data-key');\n\n    setContacts(prevState => prevState.filter(contact => contact.id !== id));\n  };\n\n  const visibleContacts = getVisibleContacts();\n  return (\n    <div>\n      <h1 className=\"header\">Phonebook</h1>\n      <ContactForm addContact={addContactSubmit} />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter value={filter} handleChange={changeFilter} />\n      <ContactList contacts={visibleContacts} onDelete={onDeleteContact} />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}